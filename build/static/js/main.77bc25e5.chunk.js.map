{"version":3,"sources":["Log.js","NotFound.js","Tab.js","Accordion.js","ContinentLogs.js","assets/continents.png","Continents.js","Navigation.js","CreateLogForm.js","Logs.js","Modal.js","Comment.js","App.js","reportWebVitals.js","index.js"],"names":["EditLog","props","state","title","year","body","continentId","country","error","window","confirm","id","this","match","params","logId","fetch","method","then","toast","success","history","push","event","setState","target","value","preventDefault","JSON","stringify","headers","response","json","document","onSubmit","handleSubmit","className","htmlFor","onChange","handleTitleChange","style","color","handleBodyChange","type","onClick","deletePost","React","Component","NotFound","Tab","content","handleclick","active","buttonText","Accordion","items","tabs","showText","hideText","handleTabClick","bind","ContinentLogs","data","continents","cid","map","each","name","i","length","to","Continents","src","continentspic","alt","Navigation","exact","CreateLogForm","errors","error_continent","error_country","error_year","error_title","String","Math","max","parseInt","isNaN","validate_form","handleContinentChange","handleCountryChange","handleYearChange","Logs","Modal","modalContainer","getElementById","ReactDom","createPortal","tabIndex","onClose","handleNameChange","error_name","handleCommentChange","error_comment","Comment","comment","filter","isModalOpen","time","Date","getTime","sort","a","b","UNIX_timestamp","toISOString","slice","replace","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.77bc25e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./style.css\";\nexport default class EditLog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      year: \"\",\n      body: \"\",\n      continentId: \"\",\n      country: \"\",\n      error: \"\",\n    };\n  }\n  deletePost() {\n    const isConfirmed = window.confirm(\"Are you sure to delete this log?\");\n    if (!isConfirmed) {\n      return;\n    }\n    const id = this.props.match.params.logId;\n    fetch(`https://itp404-final-project-backend.herokuapp.com/api/logs/${id}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      toast.success(`Successfully deleted`);\n      this.props.history.push(\"/\");\n      this.props.history.push(\"/logs\");\n    });\n  }\n  handleYearChange(event) {\n    this.setState({\n      year: event.target.value,\n    });\n  }\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n  handleBodyChange(event) {\n    this.setState({\n      body: event.target.value,\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.title === \"\") {\n      this.setState({ error: \"Title cannot be empty\" });\n      return;\n    }\n    const id = this.props.match.params.logId;\n    fetch(`https://itp404-final-project-backend.herokuapp.com/api/logs/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        title: this.state.title,\n        year: this.state.year,\n        body: this.state.body,\n        continentId: this.state.continentId,\n        country: this.state.country,\n      }),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        toast.success(`Log \"${json.title}\" was successfully updated`);\n        this.props.history.push(\"/\");\n        this.props.history.push(\"/logs\");\n      });\n  }\n  componentDidMount() {\n    const id = this.props.match.params.logId;\n    fetch(`https://itp404-final-project-backend.herokuapp.com/api/logs/${id}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(json);\n        document.title = `Log \"${this.state.title}\"`;\n      });\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={(event) => {\n          this.handleSubmit(event);\n        }}\n      >\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"title\" className=\"form-label\">\n            Title\n          </label>\n          <input\n            id=\"title\"\n            className=\"form-control\"\n            value={this.state.title}\n            onChange={(event) => {\n              this.handleTitleChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.error}</span>\n        </div>\n        <div className=\"my-3\">\n          <label htmlFor=\"body\" className=\"form-label\">\n            Body\n          </label>\n          <textarea\n            id=\"body\"\n            className=\"form-control\"\n            value={this.state.body}\n            onChange={(event) => {\n              this.handleBodyChange(event);\n            }}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary edit\">\n          Edit\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger\"\n          onClick={() => {\n            this.deletePost();\n          }}\n        >\n          Delete\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class NotFound extends React.Component {\n  componentDidMount() {\n    document.title = \"404 Not Found\";\n  }\n  render() {\n    return <h1 data-testid=\"not_found\">404 Not Found</h1>;\n  }\n}\n","import \"./style.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default class Tab extends React.Component {\n  render() {\n    return this.props.content ? (\n      <>\n        <div className=\"tab mb-2\">\n          <span className=\"title text-center\">\n            <button\n              onClick={() => {\n                this.props.handleclick();\n              }}\n              className={\n                this.props.active ? \"btn btn-secondary\" : \"btn btn-primary\"\n              }\n            >\n              {this.props.active\n                ? this.props.buttonText[1]\n                  ? this.props.buttonText[1]\n                  : \"-\"\n                : this.props.buttonText[0]\n                ? this.props.buttonText[0]\n                : \"+\"}\n            </button>\n          </span>\n        </div>\n        <div className={this.props.active ? \"content show\" : \"content hide\"}>\n          {this.props.content}\n        </div>\n      </>\n    ) : (\n      <></>\n    );\n  }\n}\nTab.propTypes = {\n  handleclick: PropTypes.func,\n  buttonText: PropTypes.array,\n  content: PropTypes.string,\n  active: PropTypes.bool,\n};\n","import React from \"react\";\nimport Tab from \"./Tab\";\nimport \"./style.css\";\n\n// reference: https://ovpv.me/custom-accordion-reactjs/\nexport default class Accordion extends React.Component {\n  constructor(props) {\n    super(props);\n    const items = props.tabs;\n    const showText = props.showText;\n    const hideText = props.hideText;\n    this.state = {\n      tabs: items,\n      active: false,\n      buttonText: [showText, hideText],\n    };\n    this.handleTabClick = this.handleTabClick.bind(this);\n  }\n  handleTabClick() {\n    if (this.state.active === false) {\n      this.setState({ active: true });\n    } else {\n      this.setState({ active: false });\n    }\n  }\n  render() {\n    const tabs = this.state.tabs;\n    return (\n      <div id=\"accordion\">\n        <Tab\n          handleclick={this.handleTabClick}\n          content={tabs.body}\n          active={this.state.active}\n          buttonText={this.state.buttonText}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link } from \"react-router-dom\";\nimport Accordion from \"./Accordion\";\nexport default class ContinentLogs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      continents: [],\n    };\n  }\n\n  componentDidMount() {\n    const cid = this.props.match.params.continentId;\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          continents: [...json.map((each) => each.name)],\n        });\n        document.title = `Logs for ${this.state.continents[cid]}`;\n      });\n    fetch(`https://itp404-final-project-backend.herokuapp.com/api/logs`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        for (let i = 0; i < json.length; i++) {\n          if (json[i].continentId === cid) {\n            this.setState({\n              data: [...this.state.data, json[i]],\n            });\n          }\n        }\n      });\n  }\n  render() {\n    return this.state.data.length === 0 ? (\n      <div>No records found.</div>\n    ) : (\n      <div className=\"container-fluid\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr className=\"row\">\n              <th className=\"col\">Country</th>\n              <th className=\"col\">Trip Year</th>\n              <th className=\"col\">Log</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((each) => (\n              <tr key={each.id} className=\"row\">\n                <td className=\"col\">{each.country}</td>\n                <td className=\"col\">{each.year}</td>\n                <td className=\"col\">\n                  {\" \"}\n                  <Link to={`/logs/${each.id}`}>{each.title}</Link>\n                  <Accordion tabs={each} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/continents.429a3d41.png\";","import React from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link } from \"react-router-dom\";\nimport continentspic from \"./assets/continents.png\";\nimport Accordion from \"./Accordion\";\nexport default class Continents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Home page\";\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          data: json,\n        });\n      });\n  }\n  render() {\n    return (\n      <div className=\"text-center\">\n        <Link to={`/logs`}>\n          <img src={continentspic} alt=\"all\" />\n        </Link>\n        {this.state.data.map((each) => (\n          <div key={each.id}>\n            {\" \"}\n            <Link to={`/logs/continents/${each.id}`} data-testid={each.name}>\n              {each.name}\n            </Link>\n            <div className=\"mb-3\" data-testid=\"accordion\">\n              <Accordion tabs={each} showText={\"Show more\"} hideText={\"Hide\"} />\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nexport default class Navigation extends React.Component {\n  render() {\n    return (\n      <nav className=\"mt-2\">\n        <ul className=\"nav justify-content-center\">\n          <li className=\"nav-item\">\n            <NavLink exact className=\"nav-link\" to=\"/\">\n              Home\n            </NavLink>\n          </li>\n\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/logs\">\n              Logs\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact className=\"nav-link\" to=\"/newLog\">\n              Create a log\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink exact className=\"nav-link\" to=\"/comment\">\n              Comments\n            </NavLink>\n          </li>\n        </ul>\n        <hr />\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./style.css\";\nfunction validate_form(continentId, country, year, title) {\n  let errors = {\n    error_continent: \"\",\n    error_country: \"\",\n    error_year: \"\",\n    error_title: \"\",\n  };\n  if (continentId === \"\") {\n    errors.error_continent = \"Continent cannot be empty\";\n  }\n  if (country === \"\") {\n    errors.error_country = \"Country cannot be empty\";\n  }\n  if (title === \"\") {\n    errors.error_title = \"Title cannot be empty\";\n  }\n  if (year === \"\") {\n    errors.error_year = \"Year cannot be empty\";\n  } else if (\n    isNaN(parseInt(year)) ||\n    parseInt(year) < 1980 ||\n    parseInt(year) > 2021\n  ) {\n    errors.error_year = \"Year should be in range 1980-2021\";\n  }\n  return errors;\n}\nexport default class CreateLogForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      continentId: \"\",\n      country: \"\",\n      year: \"\",\n      title: \"\",\n      body: \"\",\n      continents: [],\n      id: \"\",\n      errors: {\n        error_continent: \"\",\n        error_country: \"\",\n        error_year: \"\",\n        error_title: \"\",\n      },\n    };\n  }\n  componentDidMount() {\n    document.title = \"Create a new log\";\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          continents: json,\n        });\n      });\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/logs\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          id: String(\n            json.length !== 0\n              ? Math.max(...json.map((each) => parseInt(each.id))) + 1\n              : 0\n          ),\n        });\n      });\n  }\n  handleCountryChange(event) {\n    this.setState({\n      country: event.target.value,\n    });\n  }\n  handleYearChange(event) {\n    this.setState({\n      year: event.target.value,\n    });\n  }\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n  handleBodyChange(event) {\n    this.setState({\n      body: event.target.value,\n    });\n  }\n  handleContinentChange(event) {\n    this.setState({\n      continentId: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const continentId = this.state.continentId;\n    const country = this.state.country;\n    const year = this.state.year;\n    const title = this.state.title;\n    let errors = validate_form(continentId, country, year, title);\n    if (\n      errors.error_continent !== \"\" ||\n      errors.error_country !== \"\" ||\n      errors.error_year !== \"\" ||\n      errors.error_title !== \"\"\n    ) {\n      this.setState({\n        errors: {\n          error_continent: errors.error_continent,\n          error_country: errors.error_country,\n          error_year: errors.error_year,\n          error_title: errors.error_title,\n        },\n      });\n      return;\n    } else {\n      fetch(\"https://itp404-final-project-backend.herokuapp.com/api/logs\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          title: this.state.title,\n          body: this.state.body,\n          id: this.state.id,\n          continentId: this.state.continentId,\n          year: this.state.year,\n          country: this.state.country,\n          error_continent: \"\",\n          error_country: \"\",\n          error_year: \"\",\n          error_title: \"\",\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          toast.success(`\"${json.title}\" was successfully created`);\n          this.props.history.push(\"/logs\");\n        });\n    }\n  }\n  render() {\n    return (\n      <form\n        onSubmit={(event) => {\n          this.handleSubmit(event);\n        }}\n      >\n        <div className=\"my-3 form-group required\">\n          <label className=\"text-sm-right form-label col-2\" htmlFor=\"continent\">\n            Continent\n          </label>\n          <select\n            className=\"form-select\"\n            id=\"continent\"\n            data-testid=\"select\"\n            value={this.state.continentId}\n            onChange={(event) => {\n              this.handleContinentChange(event);\n            }}\n          >\n            <option>--Select Continent--</option>\n            {/* {this.state.continents.map((continent) => (\n              <option\n                data-testid=\"select-option\"\n                key={continent.id}\n                value={continent.id}\n              >\n                {continent.name}\n              </option>\n            ))} */}\n            <option data-testid=\"select-option\" value={\"0\"}>\n              Africa\n            </option>\n            <option data-testid=\"select-option\" value={\"1\"}>\n              Antractica\n            </option>\n            <option data-testid=\"select-option\" value={\"2\"}>\n              Asia\n            </option>\n            <option data-testid=\"select-option\" value={\"3\"}>\n              Australia\n            </option>\n            <option data-testid=\"select-option\" value={\"4\"}>\n              Europe\n            </option>\n            <option data-testid=\"select-option\" value={\"5\"}>\n              North America\n            </option>\n            <option data-testid=\"select-option\" value={\"6\"}>\n              South America\n            </option>\n          </select>\n          <span style={{ color: \"red\" }}>\n            {this.state.errors.error_continent}\n          </span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"country\" className=\"form-label\">\n            Country\n          </label>\n          <input\n            id=\"country\"\n            type=\"text\"\n            data-testid=\"country\"\n            className=\"form-control\"\n            value={this.state.country}\n            onChange={(event) => {\n              this.handleCountryChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>\n            {this.state.errors.error_country}\n          </span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"year\" className=\"form-label\">\n            Year\n          </label>\n          <input\n            id=\"year\"\n            type=\"number\"\n            data-testid=\"year\"\n            className=\"form-control\"\n            value={this.state.year}\n            onChange={(event) => {\n              this.handleYearChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.errors.error_year}</span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"title\" className=\"form-label\">\n            Title\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            className=\"form-control\"\n            value={this.state.title}\n            onChange={(event) => {\n              this.handleTitleChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.errors.error_title}</span>\n        </div>\n        <div className=\"my-3 form-group\">\n          <label htmlFor=\"body\" className=\"form-label\">\n            Body\n          </label>\n          <textarea\n            id=\"body\"\n            className=\"form-control\"\n            value={this.state.body}\n            onChange={(event) => {\n              this.handleBodyChange(event);\n            }}\n          ></textarea>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Create a new log\n        </button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link } from \"react-router-dom\";\nimport Accordion from \"./Accordion\";\nexport default class Logs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      continents: [],\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"All logs\";\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/logs\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          data: json,\n        });\n      });\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          continents: [...json.map((each) => each.name)],\n        });\n      });\n  }\n  render() {\n    return this.state.data.length !== 0 ? (\n      <div className=\"container-fluid\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr className=\"row\">\n              <th className=\"col-3\">Continent</th>\n              <th className=\"col-3\">Country</th>\n              <th className=\"col-3\">Trip Year</th>\n              <th className=\"col-3\">Log</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((each) => (\n              <tr key={each.id} className=\"row\">\n                <td className=\"col-3\">\n                  {this.state.continents[each.continentId]}\n                </td>\n                <td className=\"col-3\">{each.country}</td>\n                <td className=\"col-3\">{each.year}</td>\n                <td className=\"col-3\">\n                  {\" \"}\n                  <Link to={`/logs/${each.id}`}>{each.title}</Link>\n                  <Accordion tabs={each} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    ) : (\n      <div>No records found.</div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./style.css\";\n\nexport default class Modal extends React.Component {\n  render() {\n    const modalContainer = document.getElementById(\"modal-container\");\n    return ReactDom.createPortal(\n      <div className=\"modal\" tabIndex=\"-1\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">{this.props.title}</h5>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                aria-label=\"Close\"\n                onClick={this.props.onClose}\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              <form\n                onSubmit={(event) => {\n                  this.props.handleSubmit(event);\n                }}\n              >\n                <label className=\"text-sm-right form-label\" htmlFor=\"name\">\n                  Commenter's name\n                </label>\n                <input\n                  id=\"name\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  onChange={(event) => {\n                    this.props.handleNameChange(event);\n                  }}\n                />\n                <span style={{ color: \"red\" }}>\n                  {this.props.state.errors.error_name}\n                </span>\n                <div>\n                  <label className=\"text-sm-right form-label\" htmlFor=\"comment\">\n                    Comment\n                  </label>\n                  <textarea\n                    id=\"comment\"\n                    className=\"form-control\"\n                    onChange={(event) => {\n                      this.props.handleCommentChange(event);\n                    }}\n                  />\n                  <span style={{ color: \"red\" }}>\n                    {this.props.state.errors.error_comment}\n                  </span>\n                </div>\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={(event) => {\n                  this.props.handleSubmit(event);\n                }}\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={this.props.onClose}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>,\n\n      modalContainer\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Modal from \"./Modal\";\nimport { toast } from \"react-toastify\";\nfunction timeConverter(UNIX_timestamp) {\n  let x = new Date(UNIX_timestamp).toISOString().slice(0, 19).replace(\"T\", \" \");\n  return x;\n}\nfunction validate_form(name, comment) {\n  let errors = {\n    error_name: \"\",\n    error_comment: \"\",\n  };\n  if (name === \"\") {\n    errors.error_name = \"Commenter's name cannot be empty\";\n  }\n  if (comment === \"\") {\n    errors.error_comment = \"Comment cannot be empty\";\n  }\n  return errors;\n}\nexport default class Comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isModalOpen: false,\n      name: \"\",\n      comment: \"\",\n      time: \"\",\n      errors: {\n        error_name: \"\",\n        error_comment: \"\",\n      },\n      data: [],\n    };\n  }\n  handleCommentChange = (event) => {\n    this.setState({\n      comment: event.target.value,\n    });\n  };\n  handleNameChange = (event) => {\n    this.setState({\n      name: event.target.value,\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const name = this.state.name;\n    const comment = this.state.comment;\n    const errors = validate_form(name, comment);\n    if (errors.error_comment !== \"\" || errors.error_name !== \"\") {\n      this.setState({\n        errors: {\n          error_name: errors.error_name,\n          error_comment: errors.error_comment,\n        },\n      });\n      return;\n    } else {\n      document.getElementById(\"root\").style.filter = \"blur(0px) grayscale(0%)\";\n      this.setState({\n        isModalOpen: false,\n      });\n      fetch(\"https://itp404-final-project-backend.herokuapp.com/api/comments\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: this.state.name,\n          comment: this.state.comment,\n          //   time: Math.round(new Date().getTime() / 1000),\n          time: new Date().getTime(),\n          error_name: \"\",\n          error_comment: \"\",\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          toast.success(`Your comment was successfully sent`);\n          this.props.history.push(\"/\");\n          this.props.history.push(\"/comment\");\n        });\n    }\n  };\n  componentDidMount() {\n    document.title = \"Comments\";\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/comments\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          data: json.sort((a, b) => (a.time < b.time ? 1 : -1)),\n        });\n      });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <button\n          className=\"btn btn-primary\"\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isModalOpen: true });\n            document.getElementById(\"root\").style.filter = \"blur(5px)\";\n          }}\n        >\n          Leave Your Comment Here\n        </button>\n\n        {this.state.isModalOpen && (\n          <Modal\n            title=\"Add a comment\"\n            state={this.state}\n            onClose={() => {\n              document.getElementById(\"root\").style.filter =\n                \"blur(0px) grayscale(0%)\";\n              this.setState({\n                isModalOpen: false,\n                name: \"\",\n                comment: \"\",\n                time: \"\",\n                errors: {\n                  error_name: \"\",\n                  error_comment: \"\",\n                },\n              });\n            }}\n            handleSubmit={this.handleSubmit}\n            handleNameChange={this.handleNameChange}\n            handleCommentChange={this.handleCommentChange}\n          />\n        )}\n        <div className=\"container mx-auto align-center\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr className=\"row\">\n                <th className=\"col\">Commenter's Name</th>\n                <th className=\"col\">Comment</th>\n                <th className=\"col\">Submitted Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.data.map((each) => (\n                <tr key={each.id} className=\"row\">\n                  <td className=\"col\">{each.name}</td>\n                  <td className=\"col\">{each.comment}</td>\n                  <td className=\"col\" data-testid=\"comment_time\">\n                    {timeConverter(each.time)}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport EditLog from \"./Log\";\nimport NotFound from \"./NotFound\";\nimport ContinentLogs from \"./ContinentLogs\";\nimport Continents from \"./Continents\";\nimport Navigation from \"./Navigation\";\nimport CreateLogForm from \"./CreateLogForm\";\nimport Logs from \"./Logs\";\nimport Comment from \"./Comment\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nexport default class App extends React.Component {\n  componentDidMount() {}\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/comment\" component={Comment} />\n            <Route exact path=\"/newLog\" component={CreateLogForm} />\n            <Route\n              path=\"/logs/continents/:continentId\"\n              component={ContinentLogs}\n            />\n            <Route path=\"/logs/:logId\" component={EditLog} />\n            <Route exact path=\"/logs\" component={Logs} />\n\n            <Route exact path=\"/\">\n              <Continents />\n            </Route>\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n        <ToastContainer />\n      </Router>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}