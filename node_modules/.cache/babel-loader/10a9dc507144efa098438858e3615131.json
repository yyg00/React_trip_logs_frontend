{"ast":null,"code":"var _jsxFileName = \"/Users/yiyaoguo/Desktop/final-project-frontend/src/CreateLogForm.js\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CreateLogForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.valid = () => {\n      if (this.state.continentId === \"\") {\n        this.setState({\n          error_continent: \"Continent cannot be empty\"\n        });\n      }\n\n      if (this.state.country === \"\") {\n        this.setState({\n          error_country: \"Country cannot be empty\"\n        });\n      }\n\n      if (this.state.year === \"\" || !isNaN(this.state.year) && Number.isInteger(parseFloat(this.state.year))) {\n        this.setState({\n          error_year: \"Year cannot be empty and it must be in 1980-2021\"\n        });\n      }\n\n      if (this.state.error_continent !== \"\" || this.state.error_country !== \"\" || this.state.error_year !== \"\" || this.state.error_title !== \"\") {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.state = {\n      continentId: \"\",\n      country: \"\",\n      year: \"\",\n      title: \"\",\n      body: \"\",\n      continents: [],\n      id: \"\",\n      error_continent: \"\",\n      error_country: \"\",\n      error_year: \"\",\n      error_title: \"\",\n      form_is_valid: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/api/continents\").then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        continents: json\n      });\n    });\n    fetch(\"http://localhost:4000/api/logs\").then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        id: String(json.length)\n      });\n    });\n  }\n\n  handleCountryChange(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  handleYearChange(event) {\n    this.setState({\n      year: event.target.value\n    });\n  }\n\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleBodyChange(event) {\n    this.setState({\n      body: event.target.value\n    });\n  }\n\n  handleContinentChange(event) {\n    this.setState({\n      continentId: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (valid) {\n      fetch(\"http://localhost:4000/api/logs\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          title: this.state.title,\n          body: this.state.body,\n          id: this.state.id,\n          continentId: this.state.continentId,\n          year: this.state.year,\n          country: this.state.country,\n          error_continent: \"\",\n          error_country: \"\",\n          error_year: \"\",\n          error_title: \"\"\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(json => {\n        console.log(json);\n        toast.success(`Post: \"${json.title}\" was successfully created`);\n        this.props.history.push(\"/\");\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        this.handleSubmit(event);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 form-group required\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm-right form-label col-2\",\n          htmlFor: \"continent\",\n          children: \"Continent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          id: \"continent\",\n          value: this.state.continentId,\n          onChange: event => {\n            this.handleContinentChange(event);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"--Select Continent--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), this.state.continents.map(continent => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: continent.id,\n            children: continent.name\n          }, continent.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: this.state.error_continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 form-group required\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          className: \"form-label\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"country\",\n          className: \"form-control\",\n          value: this.state.country,\n          onChange: event => {\n            this.handleCountryChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: this.state.error_country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yaer\",\n          className: \"form-label\",\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"year\",\n          className: \"form-control\",\n          value: this.state.year,\n          onChange: event => {\n            this.handleYearChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: this.state.error_year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 form-group required\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          className: \"form-label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          className: \"form-control\",\n          value: this.state.title,\n          onChange: event => {\n            this.handleTitleChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: this.state.error_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          className: \"form-label\",\n          children: \"Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          className: \"form-control\",\n          value: this.state.body,\n          onChange: event => {\n            this.handleBodyChange(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Create a new log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yiyaoguo/Desktop/final-project-frontend/src/CreateLogForm.js"],"names":["React","toast","CreateLogForm","Component","constructor","props","valid","state","continentId","setState","error_continent","country","error_country","year","isNaN","Number","isInteger","parseFloat","error_year","error_title","title","body","continents","id","form_is_valid","componentDidMount","fetch","then","response","json","String","length","handleCountryChange","event","target","value","handleYearChange","handleTitleChange","handleBodyChange","handleContinentChange","handleSubmit","preventDefault","method","JSON","stringify","headers","console","log","success","history","push","render","map","continent","name","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./style.css\";\nexport default class CreateLogForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      continentId: \"\",\n      country: \"\",\n      year: \"\",\n      title: \"\",\n      body: \"\",\n      continents: [],\n      id: \"\",\n      error_continent: \"\",\n      error_country: \"\",\n      error_year: \"\",\n      error_title: \"\",\n      form_is_valid: true,\n    };\n  }\n  componentDidMount() {\n    fetch(\"http://localhost:4000/api/continents\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          continents: json,\n        });\n      });\n    fetch(\"http://localhost:4000/api/logs\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          id: String(json.length),\n        });\n      });\n  }\n  handleCountryChange(event) {\n    this.setState({\n      country: event.target.value,\n    });\n  }\n  handleYearChange(event) {\n    this.setState({\n      year: event.target.value,\n    });\n  }\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n  handleBodyChange(event) {\n    this.setState({\n      body: event.target.value,\n    });\n  }\n  handleContinentChange(event) {\n    this.setState({\n      continentId: event.target.value,\n    });\n  }\n  valid = () => {\n    if (this.state.continentId === \"\") {\n      this.setState({\n        error_continent: \"Continent cannot be empty\",\n      });\n    }\n    if (this.state.country === \"\") {\n      this.setState({\n        error_country: \"Country cannot be empty\",\n      });\n    }\n    if (\n      this.state.year === \"\" ||\n      (!isNaN(this.state.year) && Number.isInteger(parseFloat(this.state.year)))\n    ) {\n      this.setState({\n        error_year: \"Year cannot be empty and it must be in 1980-2021\",\n      });\n    }\n    if (\n      this.state.error_continent !== \"\" ||\n      this.state.error_country !== \"\" ||\n      this.state.error_year !== \"\" ||\n      this.state.error_title !== \"\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  handleSubmit(event) {\n    event.preventDefault();\n    if (valid) {\n      fetch(\"http://localhost:4000/api/logs\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          title: this.state.title,\n          body: this.state.body,\n          id: this.state.id,\n          continentId: this.state.continentId,\n          year: this.state.year,\n          country: this.state.country,\n          error_continent: \"\",\n          error_country: \"\",\n          error_year: \"\",\n          error_title: \"\",\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          console.log(json);\n          toast.success(`Post: \"${json.title}\" was successfully created`);\n          this.props.history.push(\"/\");\n        });\n    }\n  }\n  render() {\n    return (\n      <form\n        onSubmit={(event) => {\n          this.handleSubmit(event);\n        }}\n      >\n        <div className=\"my-3 form-group required\">\n          <label className=\"text-sm-right form-label col-2\" htmlFor=\"continent\">\n            Continent\n          </label>\n          <select\n            className=\"form-select\"\n            id=\"continent\"\n            value={this.state.continentId}\n            onChange={(event) => {\n              this.handleContinentChange(event);\n            }}\n          >\n            <option>--Select Continent--</option>\n            {this.state.continents.map((continent) => (\n              <option key={continent.id} value={continent.id}>\n                {continent.name}\n              </option>\n            ))}\n          </select>\n          <span style={{ color: \"red\" }}>{this.state.error_continent}</span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"country\" className=\"form-label\">\n            Country\n          </label>\n          <input\n            id=\"country\"\n            className=\"form-control\"\n            value={this.state.country}\n            onChange={(event) => {\n              this.handleCountryChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.error_country}</span>\n        </div>\n        <div className=\"my-3 form-group\">\n          <label htmlFor=\"yaer\" className=\"form-label\">\n            Year\n          </label>\n          <input\n            id=\"year\"\n            className=\"form-control\"\n            value={this.state.year}\n            onChange={(event) => {\n              this.handleYearChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.error_year}</span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"title\" className=\"form-label\">\n            Title\n          </label>\n          <input\n            id=\"title\"\n            className=\"form-control\"\n            value={this.state.title}\n            onChange={(event) => {\n              this.handleTitleChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.error_title}</span>\n        </div>\n        <div className=\"my-3 form-group\">\n          <label htmlFor=\"body\" className=\"form-label\">\n            Body\n          </label>\n          <textarea\n            id=\"body\"\n            className=\"form-control\"\n            value={this.state.body}\n            onChange={(event) => {\n              this.handleBodyChange(event);\n            }}\n          ></textarea>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Create a new log\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}