{"ast":null,"code":"import _toConsumableArray from\"/Users/yiyaoguo/Desktop/final-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/yiyaoguo/Desktop/final-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yiyaoguo/Desktop/final-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/yiyaoguo/Desktop/final-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yiyaoguo/Desktop/final-project-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{toast}from\"react-toastify\";import\"./style.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function validate_form(continentId,country,year,title){var errors={error_continent:\"\",error_country:\"\",error_year:\"\",error_title:\"\"};if(continentId===\"\"){errors.error_continent=\"Continent cannot be empty\";}if(country===\"\"){errors.error_country=\"Country cannot be empty\";}if(title===\"\"){errors.error_title=\"Title cannot be empty\";}if(year===\"\"){errors.error_year=\"Year cannot be empty\";}else if(isNaN(parseInt(year))||parseInt(year)<1980||parseInt(year)>2021){errors.error_year=\"Year should be in range 1980-2021\";}return errors;}var CreateLogForm=/*#__PURE__*/function(_React$Component){_inherits(CreateLogForm,_React$Component);var _super=_createSuper(CreateLogForm);function CreateLogForm(props){var _this;_classCallCheck(this,CreateLogForm);_this=_super.call(this,props);_this.state={continentId:\"\",country:\"\",year:\"\",title:\"\",body:\"\",continents:[],id:\"\",errors:{error_continent:\"\",error_country:\"\",error_year:\"\",error_title:\"\"}};return _this;}_createClass(CreateLogForm,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;document.title=\"Create a new log\";fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\").then(function(response){return response.json();}).then(function(json){_this2.setState({continents:json});});fetch(\"https://itp404-final-project-backend.herokuapp.com/api/logs\").then(function(response){return response.json();}).then(function(json){_this2.setState({id:String(json.length!==0?Math.max.apply(Math,_toConsumableArray(json.map(function(each){return parseInt(each.id);})))+1:0)});});}},{key:\"handleCountryChange\",value:function handleCountryChange(event){this.setState({country:event.target.value});}},{key:\"handleYearChange\",value:function handleYearChange(event){this.setState({year:event.target.value});}},{key:\"handleTitleChange\",value:function handleTitleChange(event){this.setState({title:event.target.value});}},{key:\"handleBodyChange\",value:function handleBodyChange(event){this.setState({body:event.target.value});}},{key:\"handleContinentChange\",value:function handleContinentChange(event){this.setState({continentId:event.target.value});}},{key:\"handleSubmit\",value:function handleSubmit(event){var _this3=this;event.preventDefault();var continentId=this.state.continentId;var country=this.state.country;var year=this.state.year;var title=this.state.title;var errors=validate_form(continentId,country,year,title);if(errors.error_continent!==\"\"||errors.error_country!==\"\"||errors.error_year!==\"\"||errors.error_title!==\"\"){this.setState({errors:{error_continent:errors.error_continent,error_country:errors.error_country,error_year:errors.error_year,error_title:errors.error_title}});return;}else{fetch(\"https://itp404-final-project-backend.herokuapp.com/api/logs\",{method:\"POST\",body:JSON.stringify({title:this.state.title,body:this.state.body,id:this.state.id,continentId:this.state.continentId,year:this.state.year,country:this.state.country,error_continent:\"\",error_country:\"\",error_year:\"\",error_title:\"\"}),headers:{\"Content-type\":\"application/json\"}}).then(function(response){return response.json();}).then(function(json){toast.success(\"\\\"\".concat(json.title,\"\\\" was successfully created\"));_this3.props.history.push(\"/logs\");});}}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(event){_this4.handleSubmit(event);},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"my-3 form-group required\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-sm-right form-label col-2\",htmlFor:\"continent\",children:\"Continent\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",id:\"continent\",\"data-testid\":\"select\",value:this.state.continentId,onChange:function onChange(event){_this4.handleContinentChange(event);},children:[/*#__PURE__*/_jsx(\"option\",{children:\"--Select Continent--\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"select-option\",value:\"0\",children:\"Africa\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"select-option\",value:\"1\",children:\"Antractica\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"select-option\",value:\"2\",children:\"Asia\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"select-option\",value:\"3\",children:\"Australia\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"select-option\",value:\"4\",children:\"Europe\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"select-option\",value:\"5\",children:\"North America\"}),/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"select-option\",value:\"6\",children:\"South America\"})]}),/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:this.state.errors.error_continent})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-3 form-group required\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",className:\"form-label\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{id:\"country\",type:\"text\",\"data-testid\":\"country\",className:\"form-control\",value:this.state.country,onChange:function onChange(event){_this4.handleCountryChange(event);}}),/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:this.state.errors.error_country})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-3 form-group required\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"year\",className:\"form-label\",children:\"Year\"}),/*#__PURE__*/_jsx(\"input\",{id:\"year\",type:\"number\",\"data-testid\":\"year\",className:\"form-control\",value:this.state.year,onChange:function onChange(event){_this4.handleYearChange(event);}}),/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:this.state.errors.error_year})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-3 form-group required\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",className:\"form-label\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{id:\"title\",type:\"text\",className:\"form-control\",value:this.state.title,onChange:function onChange(event){_this4.handleTitleChange(event);}}),/*#__PURE__*/_jsx(\"span\",{style:{color:\"red\"},children:this.state.errors.error_title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"my-3 form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"body\",className:\"form-label\",children:\"Body\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"body\",className:\"form-control\",value:this.state.body,onChange:function onChange(event){_this4.handleBodyChange(event);}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Create a new log\"})]});}}]);return CreateLogForm;}(React.Component);export{CreateLogForm as default};","map":{"version":3,"sources":["/Users/yiyaoguo/Desktop/final-project-frontend/src/CreateLogForm.js"],"names":["React","toast","validate_form","continentId","country","year","title","errors","error_continent","error_country","error_year","error_title","isNaN","parseInt","CreateLogForm","props","state","body","continents","id","document","fetch","then","response","json","setState","String","length","Math","max","map","each","event","target","value","preventDefault","method","JSON","stringify","headers","success","history","push","handleSubmit","handleContinentChange","color","handleCountryChange","handleYearChange","handleTitleChange","handleBodyChange","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./style.css\";\nfunction validate_form(continentId, country, year, title) {\n  let errors = {\n    error_continent: \"\",\n    error_country: \"\",\n    error_year: \"\",\n    error_title: \"\",\n  };\n  if (continentId === \"\") {\n    errors.error_continent = \"Continent cannot be empty\";\n  }\n  if (country === \"\") {\n    errors.error_country = \"Country cannot be empty\";\n  }\n  if (title === \"\") {\n    errors.error_title = \"Title cannot be empty\";\n  }\n  if (year === \"\") {\n    errors.error_year = \"Year cannot be empty\";\n  } else if (\n    isNaN(parseInt(year)) ||\n    parseInt(year) < 1980 ||\n    parseInt(year) > 2021\n  ) {\n    errors.error_year = \"Year should be in range 1980-2021\";\n  }\n  return errors;\n}\nexport default class CreateLogForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      continentId: \"\",\n      country: \"\",\n      year: \"\",\n      title: \"\",\n      body: \"\",\n      continents: [],\n      id: \"\",\n      errors: {\n        error_continent: \"\",\n        error_country: \"\",\n        error_year: \"\",\n        error_title: \"\",\n      },\n    };\n  }\n  componentDidMount() {\n    document.title = \"Create a new log\";\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          continents: json,\n        });\n      });\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/logs\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          id: String(\n            json.length !== 0\n              ? Math.max(...json.map((each) => parseInt(each.id))) + 1\n              : 0\n          ),\n        });\n      });\n  }\n  handleCountryChange(event) {\n    this.setState({\n      country: event.target.value,\n    });\n  }\n  handleYearChange(event) {\n    this.setState({\n      year: event.target.value,\n    });\n  }\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n  handleBodyChange(event) {\n    this.setState({\n      body: event.target.value,\n    });\n  }\n  handleContinentChange(event) {\n    this.setState({\n      continentId: event.target.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const continentId = this.state.continentId;\n    const country = this.state.country;\n    const year = this.state.year;\n    const title = this.state.title;\n    let errors = validate_form(continentId, country, year, title);\n    if (\n      errors.error_continent !== \"\" ||\n      errors.error_country !== \"\" ||\n      errors.error_year !== \"\" ||\n      errors.error_title !== \"\"\n    ) {\n      this.setState({\n        errors: {\n          error_continent: errors.error_continent,\n          error_country: errors.error_country,\n          error_year: errors.error_year,\n          error_title: errors.error_title,\n        },\n      });\n      return;\n    } else {\n      fetch(\"https://itp404-final-project-backend.herokuapp.com/api/logs\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          title: this.state.title,\n          body: this.state.body,\n          id: this.state.id,\n          continentId: this.state.continentId,\n          year: this.state.year,\n          country: this.state.country,\n          error_continent: \"\",\n          error_country: \"\",\n          error_year: \"\",\n          error_title: \"\",\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          toast.success(`\"${json.title}\" was successfully created`);\n          this.props.history.push(\"/logs\");\n        });\n    }\n  }\n  render() {\n    return (\n      <form\n        onSubmit={(event) => {\n          this.handleSubmit(event);\n        }}\n      >\n        <div className=\"my-3 form-group required\">\n          <label className=\"text-sm-right form-label col-2\" htmlFor=\"continent\">\n            Continent\n          </label>\n          <select\n            className=\"form-select\"\n            id=\"continent\"\n            data-testid=\"select\"\n            value={this.state.continentId}\n            onChange={(event) => {\n              this.handleContinentChange(event);\n            }}\n          >\n            <option>--Select Continent--</option>\n            {/* {this.state.continents.map((continent) => (\n              <option\n                data-testid=\"select-option\"\n                key={continent.id}\n                value={continent.id}\n              >\n                {continent.name}\n              </option>\n            ))} */}\n            <option data-testid=\"select-option\" value={\"0\"}>\n              Africa\n            </option>\n            <option data-testid=\"select-option\" value={\"1\"}>\n              Antractica\n            </option>\n            <option data-testid=\"select-option\" value={\"2\"}>\n              Asia\n            </option>\n            <option data-testid=\"select-option\" value={\"3\"}>\n              Australia\n            </option>\n            <option data-testid=\"select-option\" value={\"4\"}>\n              Europe\n            </option>\n            <option data-testid=\"select-option\" value={\"5\"}>\n              North America\n            </option>\n            <option data-testid=\"select-option\" value={\"6\"}>\n              South America\n            </option>\n          </select>\n          <span style={{ color: \"red\" }}>\n            {this.state.errors.error_continent}\n          </span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"country\" className=\"form-label\">\n            Country\n          </label>\n          <input\n            id=\"country\"\n            type=\"text\"\n            data-testid=\"country\"\n            className=\"form-control\"\n            value={this.state.country}\n            onChange={(event) => {\n              this.handleCountryChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>\n            {this.state.errors.error_country}\n          </span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"year\" className=\"form-label\">\n            Year\n          </label>\n          <input\n            id=\"year\"\n            type=\"number\"\n            data-testid=\"year\"\n            className=\"form-control\"\n            value={this.state.year}\n            onChange={(event) => {\n              this.handleYearChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.errors.error_year}</span>\n        </div>\n        <div className=\"my-3 form-group required\">\n          <label htmlFor=\"title\" className=\"form-label\">\n            Title\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            className=\"form-control\"\n            value={this.state.title}\n            onChange={(event) => {\n              this.handleTitleChange(event);\n            }}\n          />\n          <span style={{ color: \"red\" }}>{this.state.errors.error_title}</span>\n        </div>\n        <div className=\"my-3 form-group\">\n          <label htmlFor=\"body\" className=\"form-label\">\n            Body\n          </label>\n          <textarea\n            id=\"body\"\n            className=\"form-control\"\n            value={this.state.body}\n            onChange={(event) => {\n              this.handleBodyChange(event);\n            }}\n          ></textarea>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Create a new log\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}