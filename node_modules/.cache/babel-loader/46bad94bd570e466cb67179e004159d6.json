{"ast":null,"code":"var _jsxFileName = \"/Users/yiyaoguo/Desktop/final-project-frontend/src/Modal.js\";\nimport React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validate_form(name, comment) {\n  let errors = {\n    error_name: \"\",\n    error_comment: \"\"\n  };\n\n  if (name === \"\") {\n    errors.error_name = \"Commenter's name cannot be empty\";\n  }\n\n  if (comment === \"\") {\n    errors.error_comment = \"Comment cannot be empty\";\n  }\n}\n\nexport default class Modal extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    const name = this.state.name;\n    const comment = this.state.comment;\n    const errors = validate_form(name, comment);\n\n    if (errors.error_comment !== \"\" || errors.error_name !== \"\") {\n      this.setState({\n        errors: {\n          error_name: errors.error_name,\n          error_comment: errors.error_comment\n        }\n      });\n      return;\n    } else {\n      fetch(\"http://localhost:4000/api/comments\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: this.state.name,\n          comment: this.state.comment,\n          time: new Date().getTime(),\n          error_name: \"\",\n          error_comment: \"\"\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(json => {\n        console.log(json);\n        toast.success(`Post: \"${json.title}\" was successfully created`);\n        this.props.history.push(\"/comment\");\n      });\n    }\n  }\n\n  render() {\n    const modalContainer = document.getElementById(\"modal-container\");\n    console.log(this.props);\n    return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      tabIndex: \"-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: this.props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"aria-label\": \"Close\",\n              onClick: this.props.onClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.props.onSubmit,\n              children: this.props.body()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: this.props.onSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: this.props.onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), modalContainer);\n  }\n\n}","map":{"version":3,"sources":["/Users/yiyaoguo/Desktop/final-project-frontend/src/Modal.js"],"names":["React","ReactDom","validate_form","name","comment","errors","error_name","error_comment","Modal","Component","handleSubmit","event","preventDefault","state","setState","fetch","method","body","JSON","stringify","time","Date","getTime","headers","then","response","json","console","log","toast","success","title","props","history","push","render","modalContainer","document","getElementById","createPortal","onClose","onSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./style.css\";\nfunction validate_form(name, comment) {\n  let errors = {\n    error_name: \"\",\n    error_comment: \"\",\n  };\n  if (name === \"\") {\n    errors.error_name = \"Commenter's name cannot be empty\";\n  }\n  if (comment === \"\") {\n    errors.error_comment = \"Comment cannot be empty\";\n  }\n}\nexport default class Modal extends React.Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    const name = this.state.name;\n    const comment = this.state.comment;\n    const errors = validate_form(name, comment);\n    if (errors.error_comment !== \"\" || errors.error_name !== \"\") {\n      this.setState({\n        errors: {\n          error_name: errors.error_name,\n          error_comment: errors.error_comment,\n        },\n      });\n      return;\n    } else {\n      fetch(\"http://localhost:4000/api/comments\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: this.state.name,\n          comment: this.state.comment,\n          time: new Date().getTime(),\n          error_name: \"\",\n          error_comment: \"\",\n        }),\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          console.log(json);\n          toast.success(`Post: \"${json.title}\" was successfully created`);\n          this.props.history.push(\"/comment\");\n        });\n    }\n  }\n  render() {\n    const modalContainer = document.getElementById(\"modal-container\");\n    console.log(this.props);\n    return ReactDom.createPortal(\n      <div className=\"modal\" tabIndex=\"-1\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">{this.props.title}</h5>\n              <button\n                type=\"button\"\n                className=\"btn-close\"\n                aria-label=\"Close\"\n                onClick={this.props.onClose}\n              ></button>\n            </div>\n            <div className=\"modal-body\">\n              <form onSubmit={this.props.onSubmit}>{this.props.body()}</form>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                onClick={this.props.onSubmit}\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={this.props.onClose}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>,\n\n      modalContainer\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}