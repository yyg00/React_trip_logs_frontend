{"ast":null,"code":"var _jsxFileName = \"/Users/yiyaoguo/Desktop/final-project-frontend/src/ContinentLogs.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link } from \"react-router-dom\";\nimport Accordion from \"./Accordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ContinentLogs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      continents: []\n    };\n  }\n\n  componentDidMount() {\n    const cid = this.props.match.params.continentId;\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\").then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        continents: [...json.map(each => each.name)]\n      });\n      document.title = `Logs for ${this.state.continents[cid]}`;\n    });\n    fetch(`https://itp404-final-project-backend.herokuapp.com/api/logs`).then(response => {\n      return response.json();\n    }).then(json => {\n      for (let i = 0; i < json.length; i++) {\n        if (json[i].continentId === cid) {\n          this.setState({\n            data: [...this.state.data, json[i]]\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return this.state.data.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No records found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"Trip Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.data.map(each => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col\",\n              children: each.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col\",\n              children: each.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"col\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/logs/${each.id}`,\n                children: each.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n                tabs: each\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, each.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yiyaoguo/Desktop/final-project-frontend/src/ContinentLogs.js"],"names":["React","Link","Accordion","ContinentLogs","Component","constructor","props","state","data","continents","componentDidMount","cid","match","params","continentId","fetch","then","response","json","setState","map","each","name","document","title","i","length","render","country","year","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Link } from \"react-router-dom\";\nimport Accordion from \"./Accordion\";\nexport default class ContinentLogs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      continents: [],\n    };\n  }\n\n  componentDidMount() {\n    const cid = this.props.match.params.continentId;\n    fetch(\"https://itp404-final-project-backend.herokuapp.com/api/continents\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        this.setState({\n          continents: [...json.map((each) => each.name)],\n        });\n        document.title = `Logs for ${this.state.continents[cid]}`;\n      });\n    fetch(`https://itp404-final-project-backend.herokuapp.com/api/logs`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        for (let i = 0; i < json.length; i++) {\n          if (json[i].continentId === cid) {\n            this.setState({\n              data: [...this.state.data, json[i]],\n            });\n          }\n        }\n      });\n  }\n  render() {\n    return this.state.data.length === 0 ? (\n      <div>No records found.</div>\n    ) : (\n      <div className=\"container-fluid\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr className=\"row\">\n              <th className=\"col\">Country</th>\n              <th className=\"col\">Trip Year</th>\n              <th className=\"col\">Log</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((each) => (\n              <tr key={each.id} className=\"row\">\n                <td className=\"col\">{each.country}</td>\n                <td className=\"col\">{each.year}</td>\n                <td className=\"col\">\n                  {\" \"}\n                  <Link to={`/logs/${each.id}`}>{each.title}</Link>\n                  <Accordion tabs={each} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}