{"ast":null,"code":"var _jsxFileName = \"/Users/yiyaoguo/Desktop/final-project-frontend/src/SortableTable.js\";\nimport React from \"react\"; // import sortBy from \"loadash.sortby\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SortableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    const {\n      items,\n      continents,\n      defaultSort\n    } = this.props;\n    const [defaultSortedField, defaultSortDirection] = defaultSort.split(\":\");\n\n    for (let i = 0; i < items.length; i++) {\n      console.log(items[i].continentId);\n    } // let initialSortedRows = sortBy(rows, [defaultSortedField]);\n    // if (defaultSortDirection === \"desc\") {\n    //   initialSortedRows = initialSortedRows.reverse();\n    // }\n    // this.state = {\n    //   currentSortedField: defaultSortedField,\n    //   currentSortDirection: defaultSortDirection,\n    //   sortedRows: initialSortedRows,\n    // };\n\n  } //   sortRows(field) {\n  //     const { rows } = this.props;\n  //     const { currentSortedField, currentSortDirection } = this.state;\n  //     if (field === currentSortedField) {\n  //       if (currentSortDirection === \"asc\") {\n  //         this.setState({\n  //           currentSortDirection: \"desc\",\n  //           sortedRows: sortBy(rows, [currentSortedField]).reverse(),\n  //         });\n  //       } else {\n  //         this.setState({\n  //           currentSortDirection: \"asc\",\n  //           sortedRows: sortBy(rows, [currentSortedField]),\n  //         });\n  //       }\n  //     } else {\n  //       this.setState({\n  //         currentSortedField: field,\n  //         currentSortDirection: \"asc\",\n  //         sortedRows: sortBy(rows, [field]),\n  //       });\n  //     }\n  //   }\n\n\n  render() {\n    // const { columns } = this.props;\n    // const { currentSortedField, currentSortDirection, sortedRows } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yiyaoguo/Desktop/final-project-frontend/src/SortableTable.js"],"names":["React","SortableTable","Component","constructor","props","console","log","items","continents","defaultSort","defaultSortedField","defaultSortDirection","split","i","length","continentId","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;AACA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA,UAAT;AAAqBC,MAAAA;AAArB,QAAqC,KAAKL,KAAhD;AACA,UAAM,CAACM,kBAAD,EAAqBC,oBAArB,IAA6CF,WAAW,CAACG,KAAZ,CAAkB,GAAlB,CAAnD;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCR,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACM,CAAD,CAAL,CAASE,WAArB;AACD,KAPgB,CAQjB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACD,GApBwD,CAsBzD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP;AACA;AAEA,wBACE;AAAO,MAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;;AAxFwD","sourcesContent":["import React from \"react\";\n// import sortBy from \"loadash.sortby\";\nexport default class SortableTable extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    const { items, continents, defaultSort } = this.props;\n    const [defaultSortedField, defaultSortDirection] = defaultSort.split(\":\");\n    for (let i = 0; i < items.length; i++) {\n      console.log(items[i].continentId);\n    }\n    // let initialSortedRows = sortBy(rows, [defaultSortedField]);\n\n    // if (defaultSortDirection === \"desc\") {\n    //   initialSortedRows = initialSortedRows.reverse();\n    // }\n\n    // this.state = {\n    //   currentSortedField: defaultSortedField,\n    //   currentSortDirection: defaultSortDirection,\n    //   sortedRows: initialSortedRows,\n    // };\n  }\n\n  //   sortRows(field) {\n  //     const { rows } = this.props;\n  //     const { currentSortedField, currentSortDirection } = this.state;\n\n  //     if (field === currentSortedField) {\n  //       if (currentSortDirection === \"asc\") {\n  //         this.setState({\n  //           currentSortDirection: \"desc\",\n  //           sortedRows: sortBy(rows, [currentSortedField]).reverse(),\n  //         });\n  //       } else {\n  //         this.setState({\n  //           currentSortDirection: \"asc\",\n  //           sortedRows: sortBy(rows, [currentSortedField]),\n  //         });\n  //       }\n  //     } else {\n  //       this.setState({\n  //         currentSortedField: field,\n  //         currentSortDirection: \"asc\",\n  //         sortedRows: sortBy(rows, [field]),\n  //       });\n  //     }\n  //   }\n\n  render() {\n    // const { columns } = this.props;\n    // const { currentSortedField, currentSortDirection, sortedRows } = this.state;\n\n    return (\n      <table className=\"table table-striped\">\n        {/* <thead>\n          <tr>\n            {columns.map(({ field, header }) => {\n              return (\n                <th\n                  key={field}\n                  data-testid={`th-${field}`}\n                  onClick={() => {\n                    this.sortRows(field);\n                  }}\n                >\n                  {header}{\" \"}\n                  {currentSortedField === field && `(${currentSortDirection})`}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {sortedRows.map((row, i) => {\n            return (\n              <tr key={i}>\n                {columns.map(({ field }) => {\n                  return (\n                    <td key={field} data-testid={`td-${field}-${i}`}>\n                      {row[field]}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody> */}\n      </table>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}